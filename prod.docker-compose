services:
  
  # Nginx reverse proxy
  proxy:
    container_name: full-reverseproxy
    restart: on-failure
    networks:
      - full-front
    build: 
      context: ./proxy
      dockerfile: prod.dockerfile
    ports:
      - 8080:80
    # volumes:
    #   - full-reverseproxy:/usr/share/nginx/html
    depends_on:
      - "webapp"      


  # NodeJS Application
  webapp:
    container_name: full-webapp
    networks:
      - full-front
      - full-database      
    restart: on-failure
    build: 
      context: ./webapp
      dockerfile: prod.dockerfile
    expose:
      - 8001
    # volumes:
    #   - full-webapp:/app     
    depends_on:
      - "database"            

  # Mysql database
  #  docker exec -it full-mysql bash
  #  mysql -uroot -p
  #  123456
  database:
    container_name: full-database
    build: 
      context: ./database
      dockerfile: prod.dockerfile
    command: '--default-authentication-plugin=mysql_native_password'
    restart: always
    networks:
      - full-database
    # volumes:
    #   - full-database:/var/lib/fullcycle-mysql-8
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_PASSWORD=123456
    expose:
      - 3306      
      - 33060        


# volumes:
#   full-database:      
#   full-reverseproxy:
#   full-webapp:


networks:
  full-front:
    driver: bridge
  full-database:
    driver: bridge    
